template(name='full_view')
    .ui.vertical.list
        each doc_fields 
            .ui.large.basic.label
                // .ui.header #{this}: #{this_value}
                +field_template
        
            
    .ui.fluid.card
        .content 
            // a.ui.centered.inline.header.zoomer(href="/d/#{model}/#{_id}")
            .ui.large.basic.label #{model}
            if is_editing 
                +text_edit key='title'
            else             
                if title
                    a.ui.centered.inline.header.zoomer
                        |#{title}
                .ui.header subtitle: #{subtitle}
            span.left.floated
                if icon 
                    +i name=icon color=icon_color
                a.view_user(title='view profile')
                    img.ui.avatar.image(src="{{c.url _author.image_id height=200}}" title=_author.username)
                    |#{_author.username}
                div
                // +parent_block
                // +parent_avatar
            span.right.floated
                |#{when}
                +model_icon
                if currentUser.admin_mode
                    if published 
                        i.green.icon(title='published')
                    else 
                        i.yellow.save.icon(title='draft')
            div
            if location
                |#{location}            
            if location
                |#{datetime}
        if youtube_id 
            +youtube_view key='youtube_id'
        // if link
            .content.smallscroll 
                iframe.invert(width='100%' height='500px' src=link frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen='')
        if _is 'model' 'ai'
            .ui.header ai
            // each res.choices 
            //     |!{text}
            each schemas.models.ai.fields
                +field_template
                // .ui.header ai field title: #{title}
        .content.smallscrol
            if body 
                // - limit to 200 words closed block
                |{{nl2br body}}
            else if brief
                |!{brief}
            else if content
                |!{content}
            if link
                iframe.invert(width='100%' height='500px' src=link frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen='')
            // else if youtube_id
            //     +youtube_view key='youtube_id'
            unless is_editing
                if image_url
                    img.ui.fluid.image.toggle_fullview.pointer(src=image_url)
        .content 
            +parse_this
            .description
                // .ui.header lat: #{lat}
                // .ui.header lng: #{lng}
                //     // i.newspaper.large.icon
                +author_info
                +print_this
                // .ui.image.large.label 
                //     img.ui.image(src="{{c.url _author.image_id width=400 height=400}}")
                    // i.user.icon
                    |#{_author_username}
        .content
            .left.floated
                +voting
            a.right.floated.zoomer.fly_right(href="/d/#{model}/#{_id}")
                i.eye.icon
                | #{views} views
                each viewer_usernames
                    .ui.small.inverted.label #{this}
            if _author_id
                +author_info
            div
            // +eft_viewer_small
            each tags 
                .ui.label 
                    if is_editing
                        i.remove.link.icon.remove_tag(title='remove tag')
                    |#{this}
            if is_editing 
                div
                .ui.icon.input(title='add tags')
                    i.tag.icon
                    input.add_tag(type='text' placeholder='add tag')
            if is_editing 
                div
                +image_edit key='image_id'
                div
                +print_this
                +remove_button
            if is_editing 
                .ui.basic.green.large.button.save_this
                    i.green.save.icon
                    |save
            else 
                if can_edit
                    .ui.basic.blue.large.button.edit_this
                        i.blue.pencil.link.icon
                        |edit
            // if template_exists
            //     +Template.dynamic template=model_template
            unless is 'published' true
                .ui.big.green.button.publish 
                    i.eye.icon
                    |publish
        .ui.header sub ai
        .ui.icon.left.action.input
            i.brain.large.pink.link.icon.zoomer.submit_ai(title='search')
            input.ai_input2(type='text' autocomplete="off" value=current_site_search placeholder='ask da vinci...')
        each model_docs_helper 'ai_comment'
            .ui.segment
                .ui.small.header #{title}, 
                |#{body}
        .extra.content
            +comments
    
    
template(name='remove_button')
    .ui.basic.red.button.delete
        i.remove.red.icon(title='delete')
        |delete
        
template(name='parse_this')
    .ui.button.parse 
        |parse
        
template(name='field_template')
    .ui.header #{this}: 
    .ui.header #{field_value}
    if can_edit 
        +edit_template
    else if can_view
        +view_template